[tool.poetry]
name = "solstice-astrology-backend"
version = "0.1.0"
description = "This repository contains the backend service for astrology-based features in Solstice, an 18+ Apple Exclusive social application. The primary purpose of this service is to calculate astrological compatibility between users and provide related features."
authors = ["JoshJarabek7 <jarabekjosh@icloud.com>"]
license = "GNU Affero General Public License"
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.12"
pydantic = {extras = ["email-validator"], version = "^2.7.4"}
uvloop = "^0.19.0"
fastapi = "^0.111.0"
pydantic-extra-types = "^2.8.2"
timezonefinder = "^6.5.2"
pytz = "^2024.1"
pyswisseph = "^2.10.3.2"
uvicorn = {extras = ["standard"], version = "^0.30.1"}
faststream = {extras = ["kafka"], version = "^0.5.14"}
pyjwt = "^2.8.0"
neomodel = {extras = ["extras"], version = "^5.3.2"}
shapely = "^2.0.4"
openai = "^1.35.10"
azure-storage-blob = {extras = ["aio"], version = "^12.20.0"}
azure-identity = "^1.17.1"
pydantic-settings = "^2.3.4"
aiofiles = "^24.1.0"
loguru = "^0.7.2"

[tool.poetry.group.dev.dependencies]
pytest = "^8.2.2"
pytest-asyncio = "^0.23.7"
pytest-cov = "^5.0.0"
ruff = "^0.5.1"
datamodel-code-generator = "^0.25.8"
pytest-mock = "^3.14.0"

[tool.ruff]
indent-width = 4
target-version = "py312"
lint.fixable = ["ALL"]
lint.pydocstyle.convention = "google"
lint.select = ["D", "E", "F", "I", "N", "UP", "YTT", "ANN", "ASYNC", "S", "BLE", "FBT", "B", "A", "COM", "CPY", "C4", "DTZ", "T10", "EM", "FA", "ISC", "ICN", "LOG", "G", "INP", "PIE", "T20", "PYI", "PT", "Q", "RSE", "RET", "SLF", "SLOT", "SIM", "TID", "TCH", "INT", "ARG", "PTH", "TD", "FIX", "ERA", "PD", "PGH", "PL", "R", "W", "TRY", "FLY", "NPY", "AIR", "PERF", "FURB", "RUF"]
format.quote-style = "double"
format.indent-style = "space"
format.line-ending = "auto"
format.docstring-code-format = true
format.docstring-code-line-length = "dynamic"
lint.isort.combine-as-imports = true
lint.flake8-bugbear.extend-immutable-calls = ["fastapi.Depends", "fastapi.params.Depends", "fastapi.Query", "fastapi.params.Query"]
line-length = 140

[tool.pytest.ini_options]
asyncio_mode = "auto"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
